<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.ttxg.mapper.TransactionMapper">
  <resultMap id="BaseResultMap" type="cn.com.ttxg.pojo.Transaction">
    <id column="transactionid" jdbcType="INTEGER" property="transactionid" />
    <result column="goodsid" jdbcType="INTEGER" property="goodsid" />
    <result column="goodsnumber" jdbcType="VARCHAR" property="goodsnumber" />
    <result column="goodsmoney" jdbcType="VARCHAR" property="goodsmoney" />
    <result column="orderid" jdbcType="INTEGER" property="orderid" />
    <result column="state" jdbcType="VARCHAR" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    transactionid, goodsid, goodsnumber, goodsmoney, orderid, state
  </sql>
  <select id="selectByExample" parameterType="cn.com.ttxg.pojo.TransactionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transaction
    where transactionid = #{transactionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from transaction
    where transactionid = #{transactionid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.ttxg.pojo.TransactionExample">
    delete from transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.ttxg.pojo.Transaction">
    insert into transaction (transactionid, goodsid, goodsnumber, 
      goodsmoney, orderid, state
      )
    values (#{transactionid,jdbcType=INTEGER}, #{goodsid,jdbcType=INTEGER}, #{goodsnumber,jdbcType=VARCHAR}, 
      #{goodsmoney,jdbcType=VARCHAR}, #{orderid,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.ttxg.pojo.Transaction">
    insert into transaction
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="transactionid != null">
        transactionid,
      </if>
      <if test="goodsid != null">
        goodsid,
      </if>
      <if test="goodsnumber != null">
        goodsnumber,
      </if>
      <if test="goodsmoney != null">
        goodsmoney,
      </if>
      <if test="orderid != null">
        orderid,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="transactionid != null">
        #{transactionid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="goodsnumber != null">
        #{goodsnumber,jdbcType=VARCHAR},
      </if>
      <if test="goodsmoney != null">
        #{goodsmoney,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.ttxg.pojo.TransactionExample" resultType="java.lang.Long">
    select count(*) from transaction
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update transaction
    <set>
      <if test="record.transactionid != null">
        transactionid = #{record.transactionid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsid != null">
        goodsid = #{record.goodsid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsnumber != null">
        goodsnumber = #{record.goodsnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsmoney != null">
        goodsmoney = #{record.goodsmoney,jdbcType=VARCHAR},
      </if>
      <if test="record.orderid != null">
        orderid = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update transaction
    set transactionid = #{record.transactionid,jdbcType=INTEGER},
      goodsid = #{record.goodsid,jdbcType=INTEGER},
      goodsnumber = #{record.goodsnumber,jdbcType=VARCHAR},
      goodsmoney = #{record.goodsmoney,jdbcType=VARCHAR},
      orderid = #{record.orderid,jdbcType=INTEGER},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.ttxg.pojo.Transaction">
    update transaction
    <set>
      <if test="goodsid != null">
        goodsid = #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="goodsnumber != null">
        goodsnumber = #{goodsnumber,jdbcType=VARCHAR},
      </if>
      <if test="goodsmoney != null">
        goodsmoney = #{goodsmoney,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null">
        orderid = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where transactionid = #{transactionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.ttxg.pojo.Transaction">
    update transaction
    set goodsid = #{goodsid,jdbcType=INTEGER},
      goodsnumber = #{goodsnumber,jdbcType=VARCHAR},
      goodsmoney = #{goodsmoney,jdbcType=VARCHAR},
      orderid = #{orderid,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR}
    where transactionid = #{transactionid,jdbcType=INTEGER}
  </update>
</mapper>